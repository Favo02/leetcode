from typing import List

class Solution:
  def largestSubmatrix(self, matrix: List[List[int]]) -> int:

    for y, row in enumerate(matrix):
      if y == 0: continue
      for x, height in enumerate(row):
        if height and matrix[y-1][x]:
          row[x] = matrix[y-1][x] + 1

    for row in matrix:
      row.sort()

    maxx = 0
    for y, row in enumerate(matrix):
      LEN = len(row)
      for x, col in enumerate(row):
        if col == 0:
          continue
        maxx = max(maxx, col * (LEN-x))

    print(maxx)
    return maxx

s = Solution()
s.largestSubmatrix([[0,0,1],[1,1,1],[1,0,1]]) # 4
s.largestSubmatrix([[1,0,1,0,1]]) # 3
s.largestSubmatrix([[1,1,0],[1,0,1]]) # 2
s.largestSubmatrix([[0,0,1],[1,1,1],[0,0,1],[1,1,0],[1,1,0]]) # 4
s.largestSubmatrix([[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,0,1,0,1,0,1,1,0],[0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,1,1,1,0,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1],[1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1],[1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1],[1,1,1,0,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0]]) # 75
